<?php

/**
 * @file
 * Contains ewp_courses.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Field\BaseFieldDefinition;

/**
 * Implements hook_help().
 */
function ewp_courses_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the ewp_courses module.
    case 'help.page.ewp_courses':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Drupal implementation of the EWP Courses API') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function ewp_courses_theme() {
  $theme = [];

  $theme['ewp_courses'] = [
    'render element' => 'children',
  ];
  $theme['los'] = [
    'render element' => 'elements',
    'file' => 'los.page.inc',
    'template' => 'los',
  ];
  $theme['los_content_add_list'] = [
    'render element' => 'content',
    'variables' => ['content' => NULL],
    'file' => 'los.page.inc',
  ];
  $theme['loi'] = [
    'render element' => 'elements',
    'file' => 'loi.page.inc',
    'template' => 'loi',
  ];
  $theme['loi_content_add_list'] = [
    'render element' => 'content',
    'variables' => ['content' => NULL],
    'file' => 'loi.page.inc',
  ];

  return $theme;
}

/**
 * Implements hook_theme_suggestions_HOOK().
 */
function ewp_courses_theme_suggestions_los(array $variables) {
  $suggestions = [];
  $entity = $variables['elements']['#los'];
  $sanitized_view_mode = strtr($variables['elements']['#view_mode'], '.', '_');

  $suggestions[] = 'los__' . $sanitized_view_mode;
  $suggestions[] = 'los__' . $entity->bundle();
  $suggestions[] = 'los__' . $entity->bundle() . '__' . $sanitized_view_mode;
  $suggestions[] = 'los__' . $entity->id();
  $suggestions[] = 'los__' . $entity->id() . '__' . $sanitized_view_mode;
  return $suggestions;
}

/**
 * Implements hook_theme_suggestions_HOOK().
 */
function ewp_courses_theme_suggestions_loi(array $variables) {
  $suggestions = [];
  $entity = $variables['elements']['#loi'];
  $sanitized_view_mode = strtr($variables['elements']['#view_mode'], '.', '_');

  $suggestions[] = 'loi__' . $sanitized_view_mode;
  $suggestions[] = 'loi__' . $entity->bundle();
  $suggestions[] = 'loi__' . $entity->bundle() . '__' . $sanitized_view_mode;
  $suggestions[] = 'loi__' . $entity->id();
  $suggestions[] = 'loi__' . $entity->id() . '__' . $sanitized_view_mode;
  return $suggestions;
}

/**
 * Implements hook_form_alter().
 */
function ewp_courses_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // Prepopulate LOS ID form element
  if (in_array($form_id, [
    'los_class_add_form',
    'los_class_edit_form',
    'los_course_add_form',
    'los_course_edit_form',
    'los_degree_programme_add_form',
    'los_degree_programme_edit_form',
    'los_module_add_form',
    'los_module_edit_form',
    ])) {
    $entity = $form_state->getFormObject()->getEntity();
    $prefix = '';
    $bundle = $entity->get('type')->target_id;
    switch ($bundle) {
      case 'class':
        $prefix = 'CLS';
        break;
      case 'course':
        $prefix = 'CR';
        break;
      case 'degree_programme':
        $prefix = 'DEP';
        break;
      case 'module':
        $prefix = 'MOD';
        break;
      default:
        $prefix = 'LOS';
        break;
    }
    $uuid = $entity->get('uuid')->value;
    $form['los_id']['widget'][0]['value']['#default_value'] = $prefix . '/' . $uuid;
    $form['los_id']['widget']['#disabled'] = TRUE;
  }

  // Prepopulate LOI ID form element
  if (in_array($form_id, [
    'loi_class_add_form',
    'loi_class_edit_form',
    'loi_course_add_form',
    'loi_course_edit_form',
    'loi_degree_programme_add_form',
    'loi_degree_programme_edit_form',
    'loi_module_add_form',
    'loi_module_edit_form',
    ])) {
    $entity = $form_state->getFormObject()->getEntity();
    $prefix = '';
    $bundle = $entity->get('type')->target_id;
    switch ($bundle) {
      case 'class':
        $prefix = 'CLSI';
        break;
      case 'course':
        $prefix = 'CRI';
        break;
      case 'degree_programme':
        $prefix = 'DEPI';
        break;
      case 'module':
        $prefix = 'MODI';
        break;
      default:
        $prefix = 'LOI';
        break;
    }
    $uuid = $entity->get('uuid')->value;
    $form['loi_id']['widget'][0]['value']['#default_value'] = $prefix . '/' . $uuid;
    $form['loi_id']['widget']['#disabled'] = TRUE;
  }
}
